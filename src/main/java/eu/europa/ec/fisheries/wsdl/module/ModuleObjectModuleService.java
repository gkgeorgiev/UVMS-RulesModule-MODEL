package eu.europa.ec.fisheries.wsdl.module;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.7.6 2015-03-16T16:01:39.699+01:00
 * Generated source version: 2.7.6
 *
 */
@WebServiceClient(name = "ModuleObjectModuleService",
        wsdlLocation = "file:/C:/Projekt/unionvms/branches/dev/unionvms-maven/archetypes/unionvms-rules-archetype/model/src/main/resources/contract/ModuleService.wsdl",
        targetNamespace = "module.wsdl.fisheries.ec.europa.eu")
public class ModuleObjectModuleService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("module.wsdl.fisheries.ec.europa.eu", "ModuleObjectModuleService");
    public final static QName ModuleObjectModulePortType = new QName("module.wsdl.fisheries.ec.europa.eu", "ModuleObjectModulePortType");

    static {
        URL url = null;
        try {
            url = new URL("file:/C:/Projekt/unionvms/branches/dev/unionvms-maven/archetypes/unionvms-rules-archetype/model/src/main/resources/contract/ModuleService.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(ModuleObjectModuleService.class.getName())
                    .log(java.util.logging.Level.INFO,
                            "Can not initialize the default wsdl from {0}", "file:/C:/Projekt/unionvms/branches/dev/unionvms-maven/archetypes/unionvms-rules-archetype/model/src/main/resources/contract/ModuleService.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public ModuleObjectModuleService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public ModuleObjectModuleService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ModuleObjectModuleService() {
        super(WSDL_LOCATION, SERVICE);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public ModuleObjectModuleService(WebServiceFeature... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public ModuleObjectModuleService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public ModuleObjectModuleService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     *
     * @return returns ModuleObjectModulePortType
     */
    @WebEndpoint(name = "ModuleObjectModulePortType")
    public ModuleObjectModulePortType getModuleObjectModulePortType() {
        return super.getPort(ModuleObjectModulePortType, ModuleObjectModulePortType.class);
    }

    /**
     *
     * @param features A list of {@link javax.xml.ws.WebServiceFeature} to
     * configure on the proxy. Supported features not in the
     * <code>features</code> parameter will have their default values.
     * @return returns ModuleObjectModulePortType
     */
    @WebEndpoint(name = "ModuleObjectModulePortType")
    public ModuleObjectModulePortType getModuleObjectModulePortType(WebServiceFeature... features) {
        return super.getPort(ModuleObjectModulePortType, ModuleObjectModulePortType.class, features);
    }

}
